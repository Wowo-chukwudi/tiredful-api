name: Build, Secure, and Deploy Docker Image to KinD
on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]


jobs:
  oast-safety:
    name: Safety
    runs-on: ubuntu-latest
    steps:
      - name: Check out Repo code
        uses: actions/checkout@v4

      - run: docker run --rm -v $(pwd):/src hysnsec/safety check -r requirements.txt --json > safety-check.json
        continue-on-error: true             

      - uses: actions/upload-artifact@v4
        with:
          name: Safety
          path: safety-check.json
        if: always()

  sast-snyk:
    name: Snyk Scan
    runs-on: ubuntu-latest
    needs: oast-safety
    steps:
      - uses: actions/checkout@master
      - uses: snyk/actions/setup@master
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Python modules
        run: pip install -r requirements.txt

      - name: Run Snyk
        run: snyk code test --json-file-output=snyk-results.json --severity-threshold=high
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true
          
      - uses: actions/upload-artifact@v4
        with:
          name: Snyk
          path: snyk-results.json
        if: always()

  sast-hadolint:
    name: Hadolint
    runs-on: ubuntu-latest
    needs: sast-snyk
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0        
        with:
          dockerfile: Dockerfile
          failure-threshold: warning
          format: json
          output-file: hadolint-check.json
        continue-on-error: true

      - uses: actions/upload-artifact@v4
        with:
          name: Hadolint
          path: hadolint-check.json
        if: always()

  build-and-scan-image:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: sast-hadolint
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Build and Push to Docker Hub
        run: |
          docker build -t devchukwudi/tiredful-api:latest .
          docker push devchukwudi/tiredful-api:latest
          
      - name: Scan with Docker Scout
        id: docker-scout
        uses: docker/scout-action@v1
        with:
          command: cves,recommendations
          to-latest: true
          ignore-base: false
          ignore-unchanged: true
          only-fixed: true
          sarif-file: scout-output.json
        continue-on-error: true
        
      - uses: actions/upload-artifact@v4
        with:
         name: Docker Scout
         path: scout-output.json
        if: always()

  deploy-to-kind:
    runs-on: ubuntu-latest
    needs: build-and-scan-image
    steps:
    - name: Checkout code repository
      uses: actions/checkout@v4
    # Step 1: Set up KinD cluster
    - name: Set up KinD cluster
      uses: helm/kind-action@v1
      with:
        version: v0.21.0

    - name: Create Kind cluster
      run: kind create cluster --name tiredful-api

    # Step 2: Load image into KinD
    - name: Load Docker image into KinD
      run: |
        sudo docker pull devchukwudi/tiredful-api:latest
        sudo kind load docker-image devchukwudi/tiredful-api:latest --name tiredful-api

    # Step 3:: Apply Kubernetes manifests
    - name: Deploy to KinD Kubernetes 
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml

    - name: Verify Deployment
      run: |
        kubectl get pods
        kubectl get deployment
        kubectl get services

  # deploy-to-k0s:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-docker-image
  #   steps:
  #   - name: Checkout code repository
  #     uses: actions/checkout@v4

  #   - name: Set up kubectl
  #     uses: azure/setup-kubectl@v1

  #   - name: Deploy to Kubernetes
  #     env:
  #       KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  #     run: |
  #       echo "$KUBE_CONFIG" > kubeconfig
  #       export KUBECONFIG=./kubeconfig
  #       kubectl apply -f deployment.yaml
  #       kubectl apply -f service.yaml
  #       kubectl set image deployment/myapp tiredful=devchukwudi/tiredful-api:${{ github.sha }}

  #   - name: Verify deployment
  #     env:
  #       KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
  #     run: |
  #       echo "$KUBE_CONFIG" > kubeconfig
  #       export KUBECONFIG=./kubeconfig
  #       kubectl rollout status deployment/myapp
